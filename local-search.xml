<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>论Nuxt之强大</title>
    <link href="/2024/08/14/%E8%AE%BANuxt%E4%B9%8B%E5%BC%BA%E5%A4%A7/"/>
    <url>/2024/08/14/%E8%AE%BANuxt%E4%B9%8B%E5%BC%BA%E5%A4%A7/</url>
    
    <content type="html"><![CDATA[<h2 id="入门学习网址"><a href="#入门学习网址" class="headerlink" title="入门学习网址"></a>入门学习网址</h2><p><a href="https://www.bilibili.com/video/BV1u84y1R7d1/?spm_id_from=333.337.search-card.all.click&vd_source=d089cf3fa472afb9fc2615b1cfc081f3">入门学习网址</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>有趣的js</title>
    <link href="/2024/07/25/js/"/>
    <url>/2024/07/25/js/</url>
    
    <content type="html"><![CDATA[<p><code>// 提取URL参数 let url=&#39;https://alibaba.com?a-1&amp;b=2&amp;c=3#hash&#39;; function queryURLParams(URL)let url = uRL.split(&#39;?&#39;)[1];const urlSearchParams =new URlSearchParams(url);const params =0bject.fromEntries(urlSearchParams.entries());     return params; console.log(queryURLParams(url));</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>智小金文档</title>
    <link href="/2024/07/18/%E6%99%BA%E5%B0%8F%E9%87%91/"/>
    <url>/2024/07/18/%E6%99%BA%E5%B0%8F%E9%87%91/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>爬虫</title>
    <link href="/2024/07/16/%E7%88%AC%E8%99%AB/"/>
    <url>/2024/07/16/%E7%88%AC%E8%99%AB/</url>
    
    <content type="html"><![CDATA[<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><p>爬虫作用主要是爬取网站中的数据</p><h3 id="参考网站"><a href="#参考网站" class="headerlink" title="参考网站"></a>参考网站</h3><p><a href="https://juejin.cn/post/7364607002826817576">https://juejin.cn/post/7364607002826817576</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>翻墙工具</title>
    <link href="/2024/04/17/clash%E7%BF%BB%E5%A2%99/"/>
    <url>/2024/04/17/clash%E7%BF%BB%E5%A2%99/</url>
    
    <content type="html"><![CDATA[<h2 id="clash"><a href="#clash" class="headerlink" title="clash"></a>clash</h2><h2 id="Charles-青花瓷用来抓包"><a href="#Charles-青花瓷用来抓包" class="headerlink" title="Charles 青花瓷用来抓包"></a>Charles 青花瓷用来抓包</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>vue3学习</title>
    <link href="/2023/12/25/vue3/"/>
    <url>/2023/12/25/vue3/</url>
    
    <content type="html"><![CDATA[<h3 id="学习视频"><a href="#学习视频" class="headerlink" title="学习视频"></a>学习视频</h3><p><a href="https://www.bilibili.com/video/BV1Za4y1r7KE/?p=60&spm_id_from=pageDriver&vd_source=d089cf3fa472afb9fc2615b1cfc081f3">地址</a></p><pre><code class="hljs">1、vite-plugin-vue-setup-extend2、volar插件可以解决ref变量必须使用.value问题3、ref能处理对象跟基本类型，reactive只能处理对象。ref处理对象的底层也是使用reactive4、想整体修改reactive所定义的数据，需要使用Objece.assign()5、toRefs与toRef6、watch（谁--》可以是写对象，(newValue,oldValue),&#123;deep:true,immediate:true&#125;）7、reactive定义的属性，watch监听是深度监听，且不能关闭的8、watchEffect,灵活度高，不需要指明监听谁9、组件标签中，子给父的值defineExpose10、defineProps([])、defineProps&lt;&gt;()、whitDefaults(defineProps&lt;&gt;(),&#123;&#125;)11、hooks，文件都需要以use开头12、nanoid生成id工具1313、pinia。变更方法1）直接修改2）$patch 3)actions--&gt;主要用于复用14、pinia中的storeToRefs、$subscribe()-&gt;数据变化的订阅监听15、$event、defineEmits16、订阅发布（总线）：mitt，pinia17、$attrs18、defineExpose、$refs、$parent19、provide与inject向后代提供数据20、默认插槽、具名插槽、作用域插槽（父亲想要数据，但是数据在孩子那）21、shallowRef、shallowReactive22、readonly、shallowReadonly23、toRaw（不是响应式）\markRaw(永远不会是响应式数据)</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>硬件</title>
    <link href="/2023/12/12/%E7%A1%AC%E4%BB%B6/"/>
    <url>/2023/12/12/%E7%A1%AC%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>打开sscom</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>好看的html</title>
    <link href="/2023/11/16/%E5%A5%BD%E7%9C%8B%E7%9A%84html/"/>
    <url>/2023/11/16/%E5%A5%BD%E7%9C%8B%E7%9A%84html/</url>
    
    <content type="html"><![CDATA[<h2 id="好看的雨滴"><a href="#好看的雨滴" class="headerlink" title="好看的雨滴"></a>好看的雨滴</h2><p><a href="%5B%E9%93%BE%E6%8E%A5%E7%9A%84%E5%9C%B0%E5%9D%80%E4%BE%8B%E5%A6%82https://www.baidu.com/%5D(https://juejin.cn/post/7270648629378367528)">地址</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Vue.js + Electron 炸裂组合，打造跨平台桌面应用</title>
    <link href="/2023/10/09/%E6%A1%8C%E9%9D%A2%E7%AB%AF%E5%BA%94%E7%94%A8/"/>
    <url>/2023/10/09/%E6%A1%8C%E9%9D%A2%E7%AB%AF%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="Vue-js-Electron"><a href="#Vue-js-Electron" class="headerlink" title="Vue.js + Electron"></a>Vue.js + Electron</h3><h1 id="vue-js是一中流行的js框架，可以用于构建动态的用户界面"><a href="#vue-js是一中流行的js框架，可以用于构建动态的用户界面" class="headerlink" title="vue.js是一中流行的js框架，可以用于构建动态的用户界面."></a>vue.js是一中流行的js框架，可以用于构建动态的用户界面.</h1><h1 id="Electron是一个开源框架，用于构建跨平台的桌面应用程序"><a href="#Electron是一个开源框架，用于构建跨平台的桌面应用程序" class="headerlink" title="Electron是一个开源框架，用于构建跨平台的桌面应用程序."></a>Electron是一个开源框架，用于构建跨平台的桌面应用程序.</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>npm安装包玩法</title>
    <link href="/2023/07/31/npm/"/>
    <url>/2023/07/31/npm/</url>
    
    <content type="html"><![CDATA[<h2 id="npm-cache-clean-–force"><a href="#npm-cache-clean-–force" class="headerlink" title="npm cache clean –force"></a>npm cache clean –force</h2><h2 id="rimraf"><a href="#rimraf" class="headerlink" title="rimraf"></a>rimraf</h2><h1 id="功能：用来快速删除node-modules"><a href="#功能：用来快速删除node-modules" class="headerlink" title="功能：用来快速删除node_modules"></a>功能：用来快速删除node_modules</h1><h1 id="用法：rimraf-node-modules"><a href="#用法：rimraf-node-modules" class="headerlink" title="用法：rimraf node_modules"></a>用法：rimraf node_modules</h1><h2 id="npm的hekr配置"><a href="#npm的hekr配置" class="headerlink" title="npm的hekr配置"></a>npm的hekr配置</h2><h1 id="http-npm-hekr-me"><a href="#http-npm-hekr-me" class="headerlink" title="http://npm.hekr.me/"></a><a href="http://npm.hekr.me/">http://npm.hekr.me/</a></h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Electron+Vue3+Vite搭建一个桌面应用</title>
    <link href="/2023/07/29/Electron+Vue3+Vite%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8/"/>
    <url>/2023/07/29/Electron+Vue3+Vite%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="Electron"><a href="#Electron" class="headerlink" title="Electron"></a>Electron</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>跨端开发</title>
    <link href="/2023/06/12/Flutter/"/>
    <url>/2023/06/12/Flutter/</url>
    
    <content type="html"><![CDATA[<h2 id="flutter"><a href="#flutter" class="headerlink" title="flutter"></a>flutter</h2><p>JsBridge：依赖于 WebView 的用于在 JavaScript 与原生之间通信并实现了某种消息传输协议的工具称之为 WebView JavaScript Bridge</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>跨多端开发Taro</title>
    <link href="/2023/05/17/%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91Taro/"/>
    <url>/2023/05/17/%E8%B7%A8%E7%AB%AF%E5%BC%80%E5%8F%91Taro/</url>
    
    <content type="html"><![CDATA[<h3 id="Taro资料"><a href="#Taro资料" class="headerlink" title="Taro资料"></a>Taro资料</h3><p><a href="https://docs.taro.zone/docs/">官网</a></p><h2 id="生成桌面端"><a href="#生成桌面端" class="headerlink" title="生成桌面端"></a>生成桌面端</h2><h3 id="Donut"><a href="#Donut" class="headerlink" title="Donut"></a>Donut</h3><p><a href="https://dev.weixin.qq.com/docs/donut/">官网</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>好玩有帮助的软件及插件等应用</title>
    <link href="/2023/05/11/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%BA%94%E7%94%A8/"/>
    <url>/2023/05/11/%E8%BD%AF%E4%BB%B6%E5%8F%8A%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h2><p><a href="https://www.voidtools.com/zh-cn/">Everything下载地址</a><br>功能：<br>    用于搜索电脑中的文件及文件夹位置<br>快捷键：<br>    工具–选项–显示窗口快捷键（ALT+K）</p><h2 id="Process思维导图"><a href="#Process思维导图" class="headerlink" title="Process思维导图"></a>Process思维导图</h2><p><a href="https://www.processon.com/">下载地址</a></p><h2 id="印象笔记"><a href="#印象笔记" class="headerlink" title="印象笔记"></a>印象笔记</h2><h2 id="live-sass-compiler"><a href="#live-sass-compiler" class="headerlink" title="live sass compiler"></a>live sass compiler</h2><p>功能：将.scss文件转换为.css文件并在指定目录中。直接在html中引入.css的位置即可</p><h2 id="截图工具"><a href="#截图工具" class="headerlink" title="截图工具"></a>截图工具</h2><h1 id="Snipaste"><a href="#Snipaste" class="headerlink" title="Snipaste"></a>Snipaste</h1><p>使用说明：需要先打开应用，才能使用。快捷键是F1，F3黏贴<br><a href="https://apps.microsoft.com/detail/9P1WXPKB68KX?rtc=1&hl=zh-cn&gl=CN">安装地址</a><br><a href="https://docs.snipaste.com/zh-cn/">功能指南</a></p><h2 id="模拟请求工具"><a href="#模拟请求工具" class="headerlink" title="模拟请求工具"></a>模拟请求工具</h2><h1 id="Apifox、Apipost"><a href="#Apifox、Apipost" class="headerlink" title="Apifox、Apipost"></a>Apifox、Apipost</h1>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Node</title>
    <link href="/2023/05/08/Node%E6%8A%98%E8%85%BE/"/>
    <url>/2023/05/08/Node%E6%8A%98%E8%85%BE/</url>
    
    <content type="html"><![CDATA[<h2 id="Node中文网"><a href="#Node中文网" class="headerlink" title="Node中文网"></a>Node中文网</h2><p><a href="https://nodejs.cn/api/">https://nodejs.cn/api/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Ai</title>
    <link href="/2023/05/04/Ai/"/>
    <url>/2023/05/04/Ai/</url>
    
    <content type="html"><![CDATA[<h2 id="openai"><a href="#openai" class="headerlink" title="openai"></a>openai</h2><p><a href="https://chat.openai.com/auth/login">官网地址</a></p><h2 id="虚拟手机号地址"><a href="#虚拟手机号地址" class="headerlink" title="虚拟手机号地址"></a>虚拟手机号地址</h2><p><a href="https://sms-activate.org/getNumber#">https://sms-activate.org/getNumber#</a></p><h2 id="文言一心"><a href="#文言一心" class="headerlink" title="文言一心"></a>文言一心</h2><h2 id="不用开科学上网办法"><a href="#不用开科学上网办法" class="headerlink" title="不用开科学上网办法"></a>不用开科学上网办法</h2><ul><li>weTab</li><li>VBot(好像要充值点钱)</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>物联网小程序</title>
    <link href="/2023/04/29/%E7%89%A9%E8%81%94%E7%BD%91%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    <url>/2023/04/29/%E7%89%A9%E8%81%94%E7%BD%91%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h3 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a>文档地址</h3><p><a href="https://github.com/tencentyun/qcloud-documents/blob/master/product/%E7%89%A9%E8%81%94%E7%BD%91/%E7%89%A9%E8%81%94%E7%BD%91%E5%BC%80%E5%8F%91%E5%B9%B3%E5%8F%B0/%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91/%E8%87%AA%E4%B8%BB%E5%93%81%E7%89%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F/%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.md">开源代码地址</a><br><a href="https://console.cloud.tencent.com/iotexplorer">云服务物联网开发平台</a></p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dns"><span class="hljs-number">1</span>、小程序代码位置：E:\小程序物联网开发\wx_demo\demo<br><span class="hljs-number">2</span>、运行虚拟设备：E:\小程序物联网开发\tencentcloud_iot_device_demo-windows-<span class="hljs-number">20230426</span>-<span class="hljs-number">2</span>a646b47cc8f42a5a7b8112c<span class="hljs-number">5f071350</span>\<span class="hljs-number">20230426</span>-<span class="hljs-number">2</span>a646b47cc8f42a5a7b8112c<span class="hljs-number">5f071350</span>\tencentcloud_iot_device_demo-windows<br>   运行run.bat就会开启设备虚拟<br>目前设置开启关闭设备，会出现订阅消息<br></code></pre></td></tr></table></figure><h3 id="小程序运行方法"><a href="#小程序运行方法" class="headerlink" title="小程序运行方法"></a>小程序运行方法</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-number">1</span>、云函数每次修改，都需要在该函数右键选择<span class="hljs-comment">--》上传并部署（不上传node_module）</span><br><span class="hljs-number">2</span>、<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Charles抓包</title>
    <link href="/2023/04/18/Charles%E6%8A%93%E5%8C%85/"/>
    <url>/2023/04/18/Charles%E6%8A%93%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p>Charles下载地址：<a href="https://www.charlesproxy.com/latest-release/download.do">https://www.charlesproxy.com/latest-release/download.do</a><br>下载解压，即可安装成功</p><h3 id="APP抓包"><a href="#APP抓包" class="headerlink" title="APP抓包"></a>APP抓包</h3><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-bullet">-</span> <span class="hljs-string">1、点击顶部菜单栏【Help】–&gt;选择【SSL Proxying】，点击【install Charles Root Certificate 】安装Charles根证书即可；</span><br>  证书安装一直下一步就可以。<br><span class="hljs-bullet">-</span> <span class="hljs-string">2、点击【Proxy】–&gt;【SSL Proxying Settings…】</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">3、在弹出选项卡中，勾选【Enable SSL Proxying】点击【add】。</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">在Host输入【*】表示接收任何主机，在Prot输入【443】最后点击【ok】保存****</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">4、点击【proxy】，取消选中window proxy</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">5、证书导入手机中</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">1、点击顶部菜单栏【Help】–&gt;选择【SSL Proxying】，点击【save Charles Root Certificate】安装Charles根证书即可。保存文件类型选择cer保存，文件名随便（例如123），然后传到手机上； </span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">2、手机打开设置-&gt;安全-&gt;更多安全设置-&gt;加密和凭据-&gt;从存储设备安装（后续安装后，就会在用户平凭据中看到），然后选择刚刚下载的凭据加入，文件名选择自己知道</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">3、如果不用，需要取消WLAN的高级选项为【无】</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">6、选中WLAN，长按连接的WALN，选择【修改网络】。高级选项，代理选择【手动】。输入服务器主机名--&gt;电脑的ip地址(172.18.10.70)、服务器端口号（8888）--&gt; （点击【Proxy】–&gt;【Proxy Settings】我们在设置下端口号，默认即可，具体视自己电脑环境设置）</span><br><br></code></pre></td></tr></table></figure><p>开始打开手机调试把，监听到对应的地址</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>垃圾桶--专治各种不开心</title>
    <link href="/2023/04/13/%E5%9E%83%E5%9C%BE%E6%A1%B6/"/>
    <url>/2023/04/13/%E5%9E%83%E5%9C%BE%E6%A1%B6/</url>
    
    <content type="html"><![CDATA[<p>垃圾鬼东西</p><h3 id="笔录"><a href="#笔录" class="headerlink" title="笔录"></a>笔录</h3><p>奋斗是件幸福的事</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Markdown简单语法</title>
    <link href="/2023/04/12/Markdown/"/>
    <url>/2023/04/12/Markdown/</url>
    
    <content type="html"><![CDATA[<h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">代码块<br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">test</span></span>()&#123;<br>        console.log(<span class="hljs-string">&#x27;this is a test&#x27;</span>)<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs clean"># 一级标题<br>## 二级标题<br>### 三级标题<br>#### 四级标题<br>##### 五级标题<br>###### 六级标题<br></code></pre></td></tr></table></figure><h3 id="文字格式"><a href="#文字格式" class="headerlink" title="文字格式"></a>文字格式</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-strong">**文字加粗**</span><br><span class="hljs-strong">*文字斜体*</span>  <br>~~文字删除线~~<br></code></pre></td></tr></table></figure><p><strong>文字加粗</strong><br><em>文字斜体</em><br><del>文字删除线</del></p><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>. 有序列表<span class="hljs-number">1</span><br><span class="hljs-attribute">2</span>. 有序列表<span class="hljs-number">1</span><br><span class="hljs-attribute">3</span>. 有序列表<span class="hljs-number">1</span><br>    <span class="hljs-attribute">1</span>. 嵌套有序列表<span class="hljs-number">2</span><br>        <span class="hljs-attribute">1</span>. 嵌套有序列表<span class="hljs-number">3</span><br>        <span class="hljs-attribute">2</span>. 嵌套有序列表<span class="hljs-number">3</span><br>        <span class="hljs-attribute">3</span>. 嵌套有序列表<span class="hljs-number">3</span><br><br></code></pre></td></tr></table></figure><ol><li>有序列表1</li><li>有序列表1</li><li>有序列表1<ol><li>嵌套有序列表2<ol><li>嵌套有序列表3</li><li>嵌套有序列表3</li><li>嵌套有序列表3</li></ol></li></ol></li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-bullet">*</span> 无序列表<br><span class="hljs-bullet">*</span> 无序列表<br><span class="hljs-bullet">*</span> 无序列表<br><span class="hljs-bullet">    *</span> 嵌套列表2<br><span class="hljs-bullet">        *</span> 嵌套列表23<br><br></code></pre></td></tr></table></figure><ul><li>无序列表</li><li>无序列表</li><li>无序列表<ul><li>嵌套列表2<ul><li>嵌套列表23</li></ul></li></ul></li></ul><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">|<span class="hljs-string"> 左对齐标题 </span>|<span class="hljs-string"> 右对齐标题 </span>|<span class="hljs-string"> 居中对齐标题 </span>|<br>|<span class="hljs-string"> :------</span>|<span class="hljs-string"> ------: </span>|<span class="hljs-string"> :------: </span>|<br>|<span class="hljs-string"> 短文本 </span>|<span class="hljs-string"> 中等文本 </span>|<span class="hljs-string"> 稍微长一点的文本 </span>|<br>|<span class="hljs-string"> 稍微长一点的文本 </span>|<span class="hljs-string"> 短文本 </span>|<span class="hljs-string"> 中等文本 </span>|<br><br></code></pre></td></tr></table></figure><table><thead><tr><th align="left">左对齐标题</th><th align="right">右对齐标题</th><th align="center">居中对齐标题</th></tr></thead><tbody><tr><td align="left">短文本</td><td align="right">中等文本</td><td align="center">稍微长一点的文本</td></tr><tr><td align="left">稍微长一点的文本</td><td align="right">短文本</td><td align="center">中等文本</td></tr></tbody></table><h3 id="图片和网页链接"><a href="#图片和网页链接" class="headerlink" title="图片和网页链接"></a>图片和网页链接</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs less"><span class="hljs-selector-attr">[链接的描述]</span>(链接的地址例如<span class="hljs-attribute">https</span>:<span class="hljs-comment">//www.baidu.com/)</span><br></code></pre></td></tr></table></figure><p><a href="%E9%93%BE%E6%8E%A5%E7%9A%84%E5%9C%B0%E5%9D%80%E4%BE%8B%E5%A6%82https://www.baidu.com/">链接的描述</a></p><h3 id="插入引用"><a href="#插入引用" class="headerlink" title="插入引用"></a>插入引用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">&gt;</span><span class="language-bash">引用内容</span><br></code></pre></td></tr></table></figure><blockquote><p>引用内容</p></blockquote><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs asciidoc"><span class="hljs-section">***</span><br><span class="hljs-section">---</span><br>两种方式到可以，而且只需要输入三个以上的*或者- 就能达到效果<br></code></pre></td></tr></table></figure><hr><hr><p>两种方式到可以，而且只需要输入三个以上的*或者- 就能达到效果</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Github下搭建Hexo博客</title>
    <link href="/2023/04/11/Github%E4%B8%8B%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/04/11/Github%E4%B8%8B%E6%90%AD%E5%BB%BAHexo%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>快速、简洁且高效的博客框架</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ul><li>GitHub账号</li><li>安装Git</li><li>安装NodeJS<br>创建仓库，格式必须为&lt;用户名&gt;.github.io</li></ul><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">npm <span class="hljs-keyword">install </span>-g hexo-cli<br><br>hexo -v<br><br>hexo init hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span><br>cd hexo-<span class="hljs-keyword">blog</span><br><span class="hljs-keyword"></span><br>npm <span class="hljs-keyword">install</span><br><span class="hljs-keyword"></span><br>hexo clean<br><br>hexo g<br><br>hexo server<br></code></pre></td></tr></table></figure><p>浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a></p><h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p><a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">https://github.com/fluid-dev/hexo-theme-fluid/releases</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd hexo-blog<br><br>git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/fluid-dev/</span>hexo-theme-fluid<span class="hljs-regexp">/releases themes/</span><span class="hljs-keyword">next</span><br><br><span class="hljs-regexp">//</span> 打开 _config.yml 文件 将主题修改为 <span class="hljs-keyword">next</span>(将主题文件地址放在themes下，theme更改为对应文件名)<br>theme: <span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure><h3 id="发布到GitHub-Pages"><a href="#发布到GitHub-Pages" class="headerlink" title="发布到GitHub Pages"></a>发布到GitHub Pages</h3><p>安装hexo-deployer-git</p><p>npm install hexo-deployer-git –save</p><p>修改根目录下的 _config.yml，配置 GitHub 相关信息</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> git@github.com:xxx/xxx.github.io.git<br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><p>部署到GitHub</p><p>hexo g -d</p><h3 id="部署到nginx"><a href="#部署到nginx" class="headerlink" title="部署到nginx"></a>部署到nginx</h3><ul><li>hexo g 生成静态文件</li><li>上传到nginx服务器</li><li>配置nginx访问地址</li></ul><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-attribute">listen</span>       <span class="hljs-number">80</span>;<br>    <span class="hljs-attribute">server_name</span>  <span class="hljs-number">127.0.0.1</span>;<br><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">root</span>  /data/www/blog;<br>        <span class="hljs-attribute">index</span>  index.html index.htm;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Ngnix部署运行</title>
    <link href="/2023/04/11/Ngnix%E9%83%A8%E7%BD%B2%E8%BF%90%E8%A1%8C/"/>
    <url>/2023/04/11/Ngnix%E9%83%A8%E7%BD%B2%E8%BF%90%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<h3 id="Ngnix下载"><a href="#Ngnix下载" class="headerlink" title="Ngnix下载"></a>Ngnix下载</h3><p>官方网站：<a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a></p><h3 id="启动Ngnix"><a href="#启动Ngnix" class="headerlink" title="启动Ngnix"></a>启动Ngnix</h3><ul><li>直接双击nginx.exe，双击后一个黑色的弹窗一闪而过。</li><li>打开cmd命令窗口，切换到nginx目录下，输入命令 nginx.exe 或者 start nginx ，回车即可。</li></ul><h3 id="关闭nginx"><a href="#关闭nginx" class="headerlink" title="关闭nginx"></a>关闭nginx</h3><p>如果使用cmd命令窗口启动nginx，关闭cmd窗口是不能结束nginx进程的，可使用两种方法关闭nginx</p><ul><li>输入nginx命令 nginx -s stop(快速停止nginx) 或 nginx -s quit(完整有序的停止nginx)。</li></ul><h3 id="打包文件存放"><a href="#打包文件存放" class="headerlink" title="打包文件存放"></a>打包文件存放</h3><ul><li>文件放在html(D:\ngnix\nginx-1.22.1\nginx-1.22.1\html)</li><li>nginx.conf下修改配置文件 root文件存放位置 listen端口</li><li>运行localhost:listen端口(<a href="http://localhost:90/">http://localhost:90</a>)</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git常用命令</title>
    <link href="/2023/04/11/Git/"/>
    <url>/2023/04/11/Git/</url>
    
    <content type="html"><![CDATA[<h3 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h3><p>初始化项目所在目录，初始化后会在当前目录下出现一个名为 .git 的目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 初始化本地仓库，在当前目录下生成 .git 文件夹</span><br>$ git init<br><br></code></pre></td></tr></table></figure><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><p>把要提交的文件的信息添加到暂存区中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 所有文件添加到暂存区中</span><br>$ git add .<br><br><span class="hljs-comment"># 把指定的文件添加到暂存区中</span><br>$ git add &lt;文件路径&gt;<br><br><span class="hljs-comment"># 添加所有修改、已删除的文件到暂存区中</span><br>$ git add -u [&lt;文件路径&gt;]<br>$ git add --update [&lt;文件路径&gt;]<br><br><span class="hljs-comment"># 添加所有修改、已删除、新增的文件到暂存区中，省略 &lt;文件路径&gt; 即为当前目录</span><br>$ git add -A [&lt;文件路径&gt;]<br>$ git add --all [&lt;文件路径&gt;]<br><br><span class="hljs-comment"># 查看所有修改、已删除但没有提交的文件，进入一个子命令系统</span><br>$ git add -i [&lt;文件路径&gt;]<br>$ git add --interactive [&lt;文件路径&gt;]<br><br></code></pre></td></tr></table></figure><h3 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h3><p>从远程仓库获取最新版本并合并到本地。 首先会执行 git fetch，然后执行 git merge，把获取的分支的 HEAD 合并到当前分支。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 从远程仓库获取最新版本。</span><br>$ git pull<br><br></code></pre></td></tr></table></figure><h3 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h3><p>将索引的当前内容与描述更改的用户和日志消息一起存储在新的提交中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 把暂存区中的文件提交到本地仓库，调用文本编辑器输入该次提交的描述信息</span><br>$ git commit<br><br><span class="hljs-comment"># 把暂存区中的文件提交到本地仓库中并添加描述信息</span><br>$ git commit -m <span class="hljs-string">&quot;&lt;提交的描述信息&gt;&quot;</span><br><br><span class="hljs-comment"># 把所有修改、已删除的文件提交到本地仓库中</span><br><span class="hljs-comment"># 不包括未被版本库跟踪的文件，等同于先调用了 &quot;git add -u&quot;</span><br>$ git commit -a -m <span class="hljs-string">&quot;&lt;提交的描述信息&gt;&quot;</span><br><br><span class="hljs-comment"># 修改上次提交的描述信息</span><br>$ git commit --amend<br><br></code></pre></td></tr></table></figure><h3 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h3><p>把本地仓库的提交推送到远程仓库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 把本地仓库的分支推送到远程仓库的指定分支</span><br>$ git push &lt;远程仓库的别名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;<br><br><span class="hljs-comment"># 删除指定的远程仓库的分支</span><br>$ git push &lt;远程仓库的别名&gt; :&lt;远程分支名&gt;<br>$ git push &lt;远程仓库的别名&gt; --delete &lt;远程分支名&gt;<br>例：git push origin master<br><br></code></pre></td></tr></table></figure><h3 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h3><p>操作 Git 的分支命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 列出本地的所有分支，当前所在分支以 &quot;*&quot; 标出</span><br>$ git branch<br><br><span class="hljs-comment"># 列出本地的所有分支并显示最后一次提交，当前所在分支以 &quot;*&quot; 标出</span><br>$ git branch -v<br><br><span class="hljs-comment"># 创建新分支，新的分支基于上一次提交建立</span><br>$ git branch &lt;分支名&gt;<br><br><span class="hljs-comment"># 修改分支名称</span><br><span class="hljs-comment"># 如果不指定原分支名称则为当前所在分支</span><br>$ git branch -m [&lt;原分支名称&gt;] &lt;新的分支名称&gt;<br><span class="hljs-comment"># 强制修改分支名称</span><br>$ git branch -M [&lt;原分支名称&gt;] &lt;新的分支名称&gt;<br><br><span class="hljs-comment"># 删除指定的本地分支</span><br>$ git branch -d &lt;分支名称&gt;<br><br><span class="hljs-comment"># 强制删除指定的本地分支</span><br>$ git branch -D &lt;分支名称&gt;<br></code></pre></td></tr></table></figure><h3 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h3><p>显示提交的记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 打印所有的提交记录</span><br>$ git <span class="hljs-built_in">log</span><br><br><span class="hljs-comment"># 打印从第一次提交到指定的提交的记录</span><br>$ git <span class="hljs-built_in">log</span> &lt;commit ID&gt;<br><br><span class="hljs-comment"># 打印指定数量的最新提交的记录</span><br>$ git <span class="hljs-built_in">log</span> -&lt;指定的数量&gt;<br><br></code></pre></td></tr></table></figure><h3 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h3><p>用于将两个或两个以上的开发历史加入(合并)一起。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 把指定的分支合并到当前所在的分支下，并自动进行新的提交</span><br>$ git merge &lt;分支名称&gt;<br><br><span class="hljs-comment"># 把指定的分支合并到当前所在的分支下，不进行新的提交</span><br>$ git merge --no-commit &lt;分支名称&gt;<br><br></code></pre></td></tr></table></figure><h3 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h3><p>还原提交记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 重置暂存区，但文件不受影响</span><br><span class="hljs-comment"># 相当于将用 &quot;git add&quot; 命令更新到暂存区的内容撤出暂存区，可以指定文件</span><br><span class="hljs-comment"># 没有指定 commit ID 则默认为当前 HEAD</span><br>$ git reset [&lt;文件路径&gt;]<br>$ git reset --mixed [&lt;文件路径&gt;]<br><br><span class="hljs-comment"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改</span><br>$ git reset &lt;commit ID&gt;<br>$ git reset --mixed &lt;commit ID&gt;<br><br><span class="hljs-comment"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改</span><br><span class="hljs-comment"># 相当于调用 &quot;git reset --mixed&quot; 命令后又做了一次 &quot;git add&quot;</span><br>$ git reset --soft &lt;commit ID&gt;<br><br><span class="hljs-comment"># 将 HEAD 的指向改变，撤销到指定的提交记录，文件也修改了</span><br>$ git reset --hard &lt;commit ID&gt;<br><br></code></pre></td></tr></table></figure><h3 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h3><p>将存储库克隆到新创建的目录中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br><span class="hljs-comment"># 默认在当前目录下创建和版本库名相同的文件夹并下载版本到该文件夹下</span><br>$ git <span class="hljs-built_in">clone</span> &lt;远程仓库的网址&gt;<br><br><span class="hljs-comment"># 指定本地仓库的目录</span><br>$ git <span class="hljs-built_in">clone</span> &lt;远程仓库的网址&gt; &lt;本地目录&gt;<br><br><span class="hljs-comment"># -b 指定要克隆的分支，默认是master分支</span><br>$ git <span class="hljs-built_in">clone</span> &lt;远程仓库的网址&gt; -b &lt;分支名称&gt; &lt;本地目录&gt;<br></code></pre></td></tr></table></figure><h3 id="git-config"><a href="#git-config" class="headerlink" title="git config"></a>git config</h3><p>用来配置 Git 的相关参数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看配置信息</span><br><span class="hljs-comment"># --local：仓库级，--global：全局级，--system：系统级</span><br>$ git config &lt;--<span class="hljs-built_in">local</span> | --global | --system&gt; -l<br><br><span class="hljs-comment"># 查看当前生效的配置信息</span><br>$ git config -l<br><br><span class="hljs-comment"># 编辑配置文件</span><br><span class="hljs-comment"># --local：仓库级，--global：全局级，--system：系统级</span><br>$ git config &lt;--<span class="hljs-built_in">local</span> | --global | --system&gt; -e<br><br><span class="hljs-comment"># 添加配置项</span><br><span class="hljs-comment"># --local：仓库级，--global：全局级，--system：系统级</span><br>$ git config &lt;--<span class="hljs-built_in">local</span> | --global | --system&gt; --add &lt;name&gt; &lt;value&gt;<br><br><span class="hljs-comment"># 获取配置项</span><br>$ git config &lt;--<span class="hljs-built_in">local</span> | --global | --system&gt; --get &lt;name&gt;<br><br><span class="hljs-comment"># 删除配置项</span><br>$ git config &lt;--<span class="hljs-built_in">local</span> | --global | --system&gt; --<span class="hljs-built_in">unset</span> &lt;name&gt;<br><br><span class="hljs-comment"># 配置提交记录中的用户信息</span><br>$ git config --global user.name &lt;用户名&gt;<br>$ git config --global user.email &lt;邮箱地址&gt;<br><br><span class="hljs-comment"># 更改Git缓存区的大小</span><br><span class="hljs-comment"># 如果提交的内容较大，默认缓存较小，提交会失败</span><br><span class="hljs-comment"># 缓存大小单位：B，例如：524288000（500MB）</span><br>$ git config --global http.postBuffer &lt;缓存大小&gt;<br><br><span class="hljs-comment"># 调用 git status/git diff 命令时以高亮或彩色方式显示改动状态</span><br>$ git config --global color.ui <span class="hljs-literal">true</span><br><br><span class="hljs-comment"># 配置可以缓存密码，默认缓存时间15分钟</span><br>$ git config --global credential.helper cache<br><br><span class="hljs-comment"># 配置密码的缓存时间</span><br><span class="hljs-comment"># 缓存时间单位：秒</span><br>$ git config --global credential.helper <span class="hljs-string">&#x27;cache --timeout=&lt;缓存时间&gt;&#x27;</span><br><br><span class="hljs-comment"># 配置长期存储密码</span><br>$ git config --global credential.helper store<br><br></code></pre></td></tr></table></figure><h3 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h3><p>更新工作树中的文件以匹配索引或指定树中的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 切换到已存在的指定分支</span><br>$ git checkout &lt;分支名称&gt;<br><br><span class="hljs-comment"># 创建并切换到指定的分支，保留所有的提交记录</span><br><span class="hljs-comment"># 等同于 &quot;git branch&quot; 和 &quot;git checkout&quot; 两个命令合并</span><br>$ git checkout -b &lt;分支名称&gt;<br><br><span class="hljs-comment"># 创建并切换到指定的分支，删除所有的提交记录</span><br>$ git checkout --orphan &lt;分支名称&gt;<br><br><span class="hljs-comment"># 替换掉本地的改动，新增的文件和已经添加到暂存区的内容不受影响</span><br>$ git checkout &lt;文件路径&gt;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
